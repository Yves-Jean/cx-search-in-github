[{"/home/ykams/codeflix/onecode/cx-search-in-github/cx-search-in-github/client/src/index.js":"1","/home/ykams/codeflix/onecode/cx-search-in-github/cx-search-in-github/client/src/App.js":"2","/home/ykams/codeflix/onecode/cx-search-in-github/cx-search-in-github/client/src/contexts/ThemeContext.js":"3","/home/ykams/codeflix/onecode/cx-search-in-github/cx-search-in-github/client/src/contexts/UserContext.js":"4","/home/ykams/codeflix/onecode/cx-search-in-github/cx-search-in-github/client/src/components/index.js":"5","/home/ykams/codeflix/onecode/cx-search-in-github/cx-search-in-github/client/src/components/toolbar/Toolbar.jsx":"6","/home/ykams/codeflix/onecode/cx-search-in-github/cx-search-in-github/client/src/components/userDetails/UserDetails.jsx":"7","/home/ykams/codeflix/onecode/cx-search-in-github/cx-search-in-github/client/src/components/searchBar/SearchBar.jsx":"8","/home/ykams/codeflix/onecode/cx-search-in-github/cx-search-in-github/client/src/services/userService.js":"9"},{"size":220,"mtime":1607369989303,"results":"10","hashOfConfig":"11"},{"size":947,"mtime":1607450631113,"results":"12","hashOfConfig":"11"},{"size":121,"mtime":1607379117598,"results":"13","hashOfConfig":"11"},{"size":122,"mtime":1607450631162,"results":"14","hashOfConfig":"11"},{"size":186,"mtime":1607378240365,"results":"15","hashOfConfig":"11"},{"size":797,"mtime":1607379767890,"results":"16","hashOfConfig":"11"},{"size":1683,"mtime":1607450631141,"results":"17","hashOfConfig":"11"},{"size":813,"mtime":1607450631138,"results":"18","hashOfConfig":"11"},{"size":214,"mtime":1607450806793,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"d7dlb1",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ykams/codeflix/onecode/cx-search-in-github/cx-search-in-github/client/src/index.js",[],["41","42"],"/home/ykams/codeflix/onecode/cx-search-in-github/cx-search-in-github/client/src/App.js",[],"/home/ykams/codeflix/onecode/cx-search-in-github/cx-search-in-github/client/src/contexts/ThemeContext.js",[],"/home/ykams/codeflix/onecode/cx-search-in-github/cx-search-in-github/client/src/contexts/UserContext.js",[],"/home/ykams/codeflix/onecode/cx-search-in-github/cx-search-in-github/client/src/components/index.js",[],"/home/ykams/codeflix/onecode/cx-search-in-github/cx-search-in-github/client/src/components/toolbar/Toolbar.jsx",[],"/home/ykams/codeflix/onecode/cx-search-in-github/cx-search-in-github/client/src/components/userDetails/UserDetails.jsx",["43"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { UserContext } from \"../../contexts/UserContext\";\nimport { getUser } from \"../../services/userService\";\n\nimport \"./userDetails.scss\";\n\nconst initialUser = {\n  login: \"-\",\n  id: 0,\n  node_id: \"-\",\n  avatar_url: \"-\",\n  gravatar_id: \"-\",\n  url: \"-\",\n  html_url: \"-\",\n  followers_url: \"-\",\n  following_url: \"-\",\n  gists_url: \"-\",\n  starred_url: \"-\",\n  subscriptions_url: \"-\",\n  organizations_url: \"-\",\n  repos_url: \"-\",\n  events_url: \"-\",\n  received_events_url: \"-\",\n  type: \"-\",\n  site_admin: \"-\",\n  name: \"-\",\n  company: \"-\",\n  blog: \"-\",\n  location: \"-\",\n  email: \"-\",\n  hireable: \"-\",\n  bio: \"-\",\n  twitter_username: \"-\",\n  public_repos: \"-\",\n  public_gists: \"-\",\n  followers: \"-\",\n  following: \"-\",\n  created_at: \"-\",\n  updated_at: \"-\",\n};\n\nconst UserDetails = () => {\n  const [username, setUsername] = useContext(UserContext);\n  const [user, setUser] = useState(initialUser);\n  useEffect(() => {\n    if (username !== \"\") {\n      getUser(username).then((result) => {\n        console.log(result);\n        if (result[0].error) {\n          setUsername(\"User not found\");\n          return setUser(initialUser);\n        }\n        setUser(result[0]);\n      });\n    } else {\n      setUser(initialUser);\n    }\n  }, [username]);\n  return (\n    <div className=\"details-container mg-tp-4\">\n      <h1>{username}</h1>\n      <div className=\"details-list\">\n        {Object.keys(user).map((field, key) => (\n          <div key={key} className=\"details-list-item \">\n            <div>{field} : </div>\n            <div> {user[field]}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default UserDetails;\n","/home/ykams/codeflix/onecode/cx-search-in-github/cx-search-in-github/client/src/components/searchBar/SearchBar.jsx",["44"],"import React, { useContext, useState } from \"react\";\n\nimport \"./searchBar.scss\";\nimport searchIcon from \"../../assets/images/search.svg\";\nimport { UserContext } from \"../../contexts/UserContext\";\n\nconst SearchBar = () => {\n  const [search, setSearch] = useState(\"\");\n  const [username, setUsername] = useContext(UserContext);\n  const searchUser = () => {\n    setUsername(search);\n  };\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  return (\n    <div className=\"search\">\n      <input\n        placeholder=\"Search Github\"\n        type=\"text\"\n        name=\"search\"\n        onChange={handleChange}\n        value={search}\n      />\n      <span onClick={searchUser}>\n        <img src={searchIcon} alt=\"Search\" className=\"search-icon\" />\n      </span>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","/home/ykams/codeflix/onecode/cx-search-in-github/cx-search-in-github/client/src/services/userService.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":58,"column":6,"nodeType":"51","endLine":58,"endColumn":16,"suggestions":"52"},{"ruleId":"53","severity":1,"message":"54","line":9,"column":10,"nodeType":"55","messageId":"56","endLine":9,"endColumn":18},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setUsername'. Either include it or remove the dependency array.","ArrayExpression",["59"],"no-unused-vars","'username' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [setUsername, username]",{"range":"62","text":"63"},[1280,1290],"[setUsername, username]"]